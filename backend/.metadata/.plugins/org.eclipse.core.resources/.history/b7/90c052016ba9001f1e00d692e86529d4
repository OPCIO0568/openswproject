plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'fund_web_backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MySQL JDBC Driver
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // Spring Data JDBC (JPA와 같이 사용시)
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Lombok (컴파일 시 코드 생성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Thymeleaf (HTML 템플릿 엔진)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Spring Security Crypto (비밀번호 암호화)
    //implementation 'org.springframework.security:spring-security-crypto'

    // Configuration Processor (설정 프로퍼티 처리)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 테스트용
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 개발 도구 (Spring Boot DevTools)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // for JSON serialization/deserialization
}


tasks.named('test') {
	useJUnitPlatform()
}
